{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\react\\\\project\\\\myproject\\\\src\\\\components\\\\BottomTabNavigator\\\\index.js\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TabItem from \"../tabitem/index\";\n\nvar BottomTabNavigator = function BottomTabNavigator(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  var focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    return React.createElement(TabItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default BottomTabNavigator;\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 30,\n    paddingVertical: 20\n  }\n});","map":{"version":3,"sources":["D:/react/project/myproject/src/components/BottomTabNavigator/index.js"],"names":["React","TabItem","BottomTabNavigator","state","descriptors","navigation","focusedOptions","routes","index","key","options","tabBarVisible","styles","container","map","route","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","onLongPress","StyleSheet","create","display","flexDirection","justifyContent","paddingHorizontal","paddingVertical"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,OAAP;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAwC;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,WAA8B,QAA9BA,WAA8B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC/D,MAAMC,cAAc,GAAGF,WAAW,CAACD,KAAK,CAACI,MAAN,CAAaJ,KAAK,CAACK,KAAnB,EAA0BC,GAA3B,CAAX,CAA2CC,OAAlE;;AAEF,MAAIJ,cAAc,CAACK,aAAf,KAAiC,KAArC,EAA4C;AAC1C,WAAO,IAAP;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACI,MAAN,CAAaO,GAAb,CAAiB,UAACC,KAAD,EAAQP,KAAR,EAAkB;AAAA,QAC1BE,OAD0B,GACdN,WAAW,CAACW,KAAK,CAACN,GAAP,CADG,CAC1BC,OAD0B;AAElC,QAAMM,KAAK,GACTN,OAAO,CAACO,WAAR,KAAwBC,SAAxB,GACIR,OAAO,CAACO,WADZ,GAEIP,OAAO,CAACS,KAAR,KAAkBD,SAAlB,GACAR,OAAO,CAACS,KADR,GAEAJ,KAAK,CAACK,IALZ;AAOA,QAAMC,SAAS,GAAGlB,KAAK,CAACK,KAAN,KAAgBA,KAAlC;;AAEA,QAAMc,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,UAAMC,KAAK,GAAGlB,UAAU,CAACmB,IAAX,CAAgB;AAC5BC,QAAAA,IAAI,EAAE,UADsB;AAE5BC,QAAAA,MAAM,EAAEX,KAAK,CAACN,GAFc;AAG5BkB,QAAAA,iBAAiB,EAAE;AAHS,OAAhB,CAAd;;AAMA,UAAI,CAACN,SAAD,IAAc,CAACE,KAAK,CAACK,gBAAzB,EAA2C;AACzCvB,QAAAA,UAAU,CAACwB,QAAX,CAAoBd,KAAK,CAACK,IAA1B;AACD;AACF,KAVD;;AAYA,QAAMU,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBzB,MAAAA,UAAU,CAACmB,IAAX,CAAgB;AACdC,QAAAA,IAAI,EAAE,cADQ;AAEdC,QAAAA,MAAM,EAAEX,KAAK,CAACN;AAFA,OAAhB;AAID,KALD;;AAOA,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAjCA,CADH,CADF;AAuCD,CA9CD;;AAgDA,eAAeP,kBAAf;AAEA,IAAMU,MAAM,GAAGmB,UAAU,CAACC,MAAX,CAAkB;AAC/BnB,EAAAA,SAAS,EAAG;AACVoB,IAAAA,OAAO,EAAG,MADA;AAEVC,IAAAA,aAAa,EAAG,KAFN;AAGVC,IAAAA,cAAc,EAAG,eAHP;AAIVC,IAAAA,iBAAiB,EAAG,EAJV;AAKVC,IAAAA,eAAe,EAAG;AALR;AADmB,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, View , TouchableOpacity } from 'react-native'\r\nimport TabItem from '../tabitem/index'\r\nconst BottomTabNavigator = ({ state, descriptors, navigation }) => {\r\n    const focusedOptions = descriptors[state.routes[state.index].key].options;\r\n\r\n  if (focusedOptions.tabBarVisible === false) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {state.routes.map((route, index) => {\r\n        const { options } = descriptors[route.key];\r\n        const label =\r\n          options.tabBarLabel !== undefined\r\n            ? options.tabBarLabel\r\n            : options.title !== undefined\r\n            ? options.title\r\n            : route.name;\r\n\r\n        const isFocused = state.index === index;\r\n\r\n        const onPress = () => {\r\n          const event = navigation.emit({\r\n            type: 'tabPress',\r\n            target: route.key,\r\n            canPreventDefault: true,\r\n          });\r\n\r\n          if (!isFocused && !event.defaultPrevented) {\r\n            navigation.navigate(route.name);\r\n          }\r\n        };\r\n\r\n        const onLongPress = () => {\r\n          navigation.emit({\r\n            type: 'tabLongPress',\r\n            target: route.key,\r\n          });\r\n        };\r\n\r\n        return (\r\n          <TabItem />\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n\r\n}\r\n\r\nexport default BottomTabNavigator\r\n\r\nconst styles = StyleSheet.create({\r\n  container : {\r\n    display : 'flex' ,\r\n    flexDirection : 'row' ,\r\n    justifyContent : 'space-between' ,\r\n    paddingHorizontal : 30 ,\r\n    paddingVertical : 20\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}